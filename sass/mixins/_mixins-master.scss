// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
	font-size: $sizeValue * 1rem;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
	table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}

// Column width with margin
@mixin column-width($numberColumns: 3) {
	width: map-get( $columns, $numberColumns ) - ( ( $columns__margin * ( $numberColumns - 1 ) ) / $numberColumns );
}

// Set the prefixes
@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }

// Output standard non-prefixed declaration
#{$property}: $value;
}

// Set the prefixes
@mixin value_prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    #{$property}: '-' + $prefix + '-' + $value;
  }

// Output standard non-prefixed declaration
#{$property}: $value;
}

@mixin media-breakpoint( $breakpoint ) {
	@if $breakpoint == xs {
		@media screen and ( min-width: 480px ) {
			@content;
		}
	}
	@if $breakpoint == sm {
		@media screen and ( min-width: 576px ) {
			@content;
		}
	}
	@if $breakpoint == md {
		@media screen and ( min-width: 768px ) {
			@content;
		}
	}
	@if $breakpoint == lg {
		@media screen and  ( min-width: 992px ) {
			@content;
		}
	}
	@if $breakpoint == xl {
		@media screen and  ( min-width: 1200px ) {
			@content;
		}
	}
	@if $breakpoint == xxl {
		@media screen and  ( min-width: 1460px ) {
			@content;
		}
	}
	@if $breakpoint == ipx {
		@media screen 
    	and (device-width : 414px) 
    	and (device-height : 812px) 
    	and (-webkit-device-pixel-ratio : 3) {
			@content;
		}
	}
	@if $breakpoint == ip8 {
		@media screen 
    	and (device-width : 414px) 
    	and (device-height : 667px) 
    	and (-webkit-device-pixel-ratio : 2) {
			@content;
		}
	}
	@if $breakpoint == ip8p {
		@media screen 
    	and (device-width : 414px) 
    	and (device-height : 736px) 
    	and (-webkit-device-pixel-ratio : 3) {
			@content;
		}
	}
}

@mixin clear-webkits( $value, $types: () ) {
	@each $type in $types {
		#{'-webkit-'+ $type}: $value;
	}
}